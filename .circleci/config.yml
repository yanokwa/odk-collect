# This config and the the Gradle flags/opts are based on: https://circleci.com/docs/2.0/language-android/
# and https://support.circleci.com/hc/en-us/articles/360021812453

version: 2

references:
  workspace: &workspace
               ~/work

  android_config: &android_config
    working_directory: *workspace
    docker:
      - image: circleci/android:api-27
    resource_class: xlarge

jobs:
  check_quality:
    <<: *android_config
    environment:
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx1024m" -Dkotlin.compiler.execution.strategy=in-process'
    steps:
      - checkout

      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "collect_app/build.gradle" }}
      - run:
          name: Download dependencies
          command: ./gradlew -PdisablePreDex --no-daemon --max-workers=8 androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "collect_app/build.gradle" }}

      - run:
          name: Run code quality checks
          command: ./gradlew -PdisablePreDex --no-daemon --max-workers=8 checkCode
      - store_artifacts:
          path: collect_app/build/reports
          destination: reports

  test_unit:
    <<: *android_config
    environment:
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx1024m" -Dkotlin.compiler.execution.strategy=in-process'
    steps:
      - checkout

      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "collect_app/build.gradle" }}
      - run:
          name: Download dependencies
          command: ./gradlew -PdisablePreDex --no-daemon --max-workers=8 androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "collect_app/build.gradle" }}

      - run:
          name: Run nbi unit tests
          command: ./gradlew -PdisablePreDex --no-daemon --max-workers=8 nbi-stubs:testDebug
      - run:
          name: Run async unit tests
          command: ./gradlew -PdisablePreDex --no-daemon --max-workers=8 async:testDebug
      - run:
          name: Run material unit tests
          command: ./gradlew -PdisablePreDex --no-daemon --max-workers=8 material:testDebug
      - run:
          name: Run app unit tests
          command: ./gradlew -PdisablePreDex --no-daemon --max-workers=8 collect_app:testDebug
      - store_artifacts:
          path: collect_app/build/reports
          destination: reports
      - store_test_results:
          path: collect_app/build/test-results

  test_instrumented:
    <<: *android_config
    environment:
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx1024m" -Dkotlin.compiler.execution.strategy=in-process'
    steps:
      - checkout

      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "collect_app/build.gradle" }}
      - run:
          name: Download dependencies
          command: ./gradlew -PdisablePreDex --no-daemon --max-workers=8 androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "collect_app/build.gradle" }}

      - run:
          name: Assemble test build
          command: ./gradlew -PdisablePreDex --no-daemon --max-workers=8 assembleDebug assembleDebugAndroidTest
      - run:
          name: Authorize gcloud
          command: |
            if [[ "$CIRCLE_PROJECT_USERNAME" == "getodk" ]]; then \
              gcloud config set project api-project-322300403941
              echo $GCLOUD_SERVICE_KEY | base64 --decode > client-secret.json
              gcloud auth activate-service-account --key-file client-secret.json
            fi
      - run:
          name: Run integration tests
          command: |
            if [[ "$CIRCLE_PROJECT_USERNAME" == "getodk" ]]; then \
              echo "y" | gcloud beta firebase test android run \
              --type instrumentation \
              --num-uniform-shards=50 \
              --app collect_app/build/outputs/apk/debug/*.apk \
              --test collect_app/build/outputs/apk/androidTest/debug/*.apk \
              --device model=Pixel2,version=28,locale=en,orientation=portrait \
              --results-bucket opendatakit-collect-test-results \
              --environment-variables coverage=true,coverageFile=/sdcard/coverage.ec \
              --directories-to-pull /sdcard --timeout 20m
            fi
          no_output_timeout: 60m

workflows:
  version: 2
  workflow:
    jobs:
      - check_quality
      - test_unit
      - test_instrumented:
          requires:
            - test_unit
          filters:
            branches:
              only: master